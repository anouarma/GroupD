<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jpa="http://www.springframework.org/schema/data/jpa"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

  <bean class="org.h2.tools.Server" destroy-method="stop" factory-method="createWebServer"
    id="h2WebServer" init-method="start">
    <constructor-arg value="-web,-webAllowOthers,-webDaemon,-webPort,8082"/>
  </bean>

  <!-- Root Context: defines shared resources visible to all other web components -->
  <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" name="datasource">
    <property name="url" value="jdbc:h2:mem:mql-platform;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE"/>
    <property name="username" value="sa"/>
    <property name="password" value=""/>
    <property name="driverClassName" value="org.h2.Driver"/>
  </bean>


  <mvc:annotation-driven/>

  <!-- Handles HTTP GET requests for /resources/** by efficiently serving
    up static resources in the ${webappRoot}/resources directory -->

  <!-- forward the request to the spring servlet  -->
  <mvc:default-servlet-handler/>

  <!-- enable annotation injections -->
  <context:annotation-config/>

  <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver"
    id="templateResolver">
    <property name="prefix" value="/WEB-INF/views/"/>
    <property name="suffix" value=".html"/>
    <property name="cacheable" value="false"/>
    <property name="templateMode" value="HTML5"/>
  </bean>

  <bean class="org.thymeleaf.spring5.SpringTemplateEngine" id="templateEngine">
    <property name="templateResolver" ref="templateResolver"/>
  </bean>

  <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
    <property name="templateEngine" ref="templateEngine"/>
  </bean>

  <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
    name="jpaVendorAdapter">
    <property name="showSql" value="true"/>
    <property name="generateDdl" value="true"/>
    <property name="database" value="H2"/>
  </bean>

  <!-- Defining the entity manager factory implementation -->
  <bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    name="entityManagerFactory">
    <property name="dataSource" ref="datasource"/>
    <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
    <property name="packagesToScan" value="org.mql.platform.models"/>
    <property name="jpaProperties">
      <props>
        <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
        <prop key="javax.persistence.schema-generation.database.action">create</prop>
      </props>
    </property>
  </bean>

  <!-- defining the transaction manager implementation -->
  <bean class="org.springframework.orm.jpa.JpaTransactionManager" name="transactionManager"/>

  <jpa:repositories base-package="org.mql.platform.dao"/>

  <tx:annotation-driven/>

  <!-- enable annotation injections -->
  <context:annotation-config/>

  <context:component-scan base-package="org.mql.platform"/>
</beans>